// ======================================
// 두 숫자를 가지고 합계를 반환하는 함수를 작성
// ======================================

// 1. 문제를 나만의 방식대로 다시 생각할 수 있는지, 면접관의 말을 그대로 생각하는 게 아닌 나만의 방식으로 바꿔서 질문이 무엇인지를 실제로 이해하는 것.
'덧셈하기';
// 2. 문제가 어떤 입력값을 담고 있는가를 이해하는 것.
'정수?', '부동소수?', '문자열로 큰 숫자를 더하는 것은?';
// 3. 어떤 출력값이 나와야 하는지, 문제에 대한 해결책에서 나와야 할 결과가 무엇인지, 출력값은 어떤 형태여야 하는지.
'정수?', '부동소수?', '문자열로 큰 숫자를 더하는 것은?';
// 4. 입력값이 출력값을 결정할 수 있는지 - 문제를 해결할 충분한 정보가 주어져 있는지

// 5. 문제의 일부인 데이터의 중요한 부분에 어떻게 라벨을 지정할 수 있는지 - 문제에서 정말 중요한 것이 무엇인가..

// =================================================
// 문자열을 입력하면 문자열의 각 문자 수를 반환하는 함수 작성
// =================================================
// 1. 문제를 맞이하면 간단한 예시로 시작
charCount('aaaa'); // {a:4}
charCount('hello'); // {h:1, e:1, l:2, o:1}
// 2. 입력값과 출력값의 순서대로 예시를 두세 개 작성
// 3. 쉬운 예시들부터 더 복잡한 예시들로 진행
/*  전달한 문자만 반환할지, 전달하지 않은 문자도 포함시킬지
    공백도 고려할지, 특수 문자, 대소문자는 어떻게 할지 등등
*/
// 4. 경계 조건들도 살펴보자 ex) 빈 입력값, 유효하지 않은 입력값
/* 아무 것도 전달하지 않거나 빈 문자열, 숫자, 객체, null을 입력한 경우 */
// 5. 사용자가 유효하지 않은 값을 입력하면 어떻게 될지를 항상 생각할 수 있어야 함

// 1. 문제를 해결하기 위한 단계들을 명확하게 작성
// 2. 세세하게 작성할 필요는 없고 해결책의 기본적인 구성 요소만 작성.
function charCount(str) {
  // 마지막에 반환할 빈 객체를 만듦
  var obj = {};
  // 주어진 문자열을 돌면서 각 문자를 찾음
  for (var i = 0; i < str.length; i++) {
    var char = str[i].toLowerCase();
    // 만약 문자가 영숫자가 아닌 공백, 마침표 등과 같은 것이라면 아무것도 하지 않음
    if (/[a-z0-9]/.test(char))
      if (obj[char]) {
        // 만약 각 문자가 영숫자이고 객체에 존재한다면 +1
        obj[char]++;
        // 만약 영숫자가 객체에 존재하지 않으면 객체에 추가하고 1로 설정
      } else {
        obj[char] = 1;
      }
  }
  // 객체를 반환
  return obj;
}

console.log(charCount('Hello'));

// 문제 복습 및 재구성
function fixCharCount(str) {
  var obj1 = {};
  for (var char of str) {
    char = char.toLowerCase();
    if (isAlphaNumeric(char)) {
      obj1[char] = ++obj1[char] || 1;
    }
  }
  return obj1;
}

function isAlphaNumeric(char) {
  var code = char.charCodeAt(0);
  if (
    !(code > 47 && code < 58) && // numeric(0-9)
    !(code > 64 && code < 91) && // upper alpha(A-Z)
    !(code > 96 && code < 123) // lower alpha(a-z)
  ) {
    return false;
  }
  return true;
}

console.log(fixCharCount('Hello hi there!'));
